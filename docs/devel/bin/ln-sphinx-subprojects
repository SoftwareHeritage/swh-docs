#!/bin/bash
set -e

create_links () {
    mkdir -p sources
    for pymodule in $(cd ../../../ && bin/ls-py-modules) ; do
        case "$pymodule" in
            "swh-docs"|"swh-icinga-plugins") continue;;
        esac
        if [ ! -e "$pymodule" -a -d "../../../${pymodule}/docs" ] ; then
            ln -s "../../../${pymodule}/docs" "$pymodule"
        fi
        if [ -f "$pymodule/images/Makefile" ] ; then
	    echo "Build images in $pymodule"
            make -I $PWD/../.. -C $pymodule images
        fi
        if [ -d "../../../${pymodule}/swh" ] ; then
            cp -r -f --symbolic-link $(realpath ../../../${pymodule}/swh/*) sources/swh/
        elif [ -d "../../../${pymodule}/src/swh" ] ; then
            cp -r -f --symbolic-link $(realpath ../../../${pymodule}/src/swh/*) sources/swh/
        fi
        pushd ../../../${pymodule}
        for EXT in rst md; do
            if [ -f README.$EXT -a ! -f docs/README.$EXT ] ; then
                ln -s ../README.$EXT docs
                break
            fi
        done
        popd
    done
}

remove_links () {
    for pymodule in $(cd ../../../ && bin/ls-py-modules) ; do
        if [ "$pymodule" = 'swh-docs' ] ; then
            continue
        fi
        if [ -L "$pymodule" ] ; then
            make -I $PWD/../.. -C $pymodule clean
            rm "$pymodule"
        fi
    done
    rm -rf sources/swh/
}

if [ "$1" = "--remove" ] ; then
    remove_links
else
    create_links
fi
